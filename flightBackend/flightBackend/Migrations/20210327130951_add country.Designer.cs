﻿// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using itec_backend.Data;

namespace itec_backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210327130951_add country")]
    partial class addcountry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("itec_backend.Entities.CountryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("CovidVaccinationDate")
                        .HasColumnType("datetime");

                    b.Property<float>("CovidVaccinationRate")
                        .HasColumnType("float");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CountryEntities");
                });

            modelBuilder.Entity("itec_backend.Entities.LocationEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("CountryEntityId")
                        .HasColumnType("varchar(767)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.Property<string>("XCoordonate")
                        .HasColumnType("text");

                    b.Property<string>("YCoordonate")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryEntityId");

                    b.ToTable("LocationEntities");
                });

            modelBuilder.Entity("itec_backend.Entities.LocationEntity", b =>
                {
                    b.HasOne("itec_backend.Entities.CountryEntity", null)
                        .WithMany("LocationEntities")
                        .HasForeignKey("CountryEntityId");
                });
#pragma warning restore 612, 618
        }
    }
}
